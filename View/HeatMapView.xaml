<UserControl x:Class="Human_Resource_Information_System.View.HeatMapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Human_Resource_Information_System.View"
             xmlns:hris="clr-namespace:Human_Resource_Information_System"
             xmlns:model="clr-namespace:Human_Resource_Information_System.Model"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="372"/>
            <ColumnDefinition Width="389"/>
        </Grid.ColumnDefinitions>
        <TextBlock  Text="Set Primary Colour :" Grid.Column="0" HorizontalAlignment="Left" Margin="18,8,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
        <ComboBox Name="cbColorChoice" Cursor="Hand" HorizontalAlignment="Left" Margin="166,6,0,0" VerticalAlignment="Top" Width="50" SelectedValuePath="Color" SelectionChanged="cbColorChoice_SelectionChanged" RenderTransformOrigin="0.942,0.402" >
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <Rectangle  Width="20" Height="20" Fill="{Binding}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <SolidColorBrush>LightBlue</SolidColorBrush>
            <SolidColorBrush>LightCoral</SolidColorBrush>
            <SolidColorBrush>LightCyan</SolidColorBrush>
            <SolidColorBrush>LightGoldenrodYellow</SolidColorBrush>
            <SolidColorBrush>LightGray</SolidColorBrush>
            <SolidColorBrush>LightPink</SolidColorBrush>
            <SolidColorBrush>LightSalmon</SolidColorBrush>
            <SolidColorBrush>LightSteelBlue</SolidColorBrush>
        </ComboBox>
        <Button Content="Launch Consultation HeatMap" Cursor="Hand" Grid.Column="0" HorizontalAlignment="Left" Margin="10,40,0,0" VerticalAlignment="Top" Width="Auto" Padding="5" Background="#FF4C9E34" Foreground="#FFF7F7F7" Click="Button_Click_Consultation_HeatMap"/>
        <!-- CONSULTATION HEATMAP STARTS FROM HERE -->
        <DataGrid x:Name="tblMapConsultationHeat" CanUserSortColumns="False" Grid.Column="0" IsReadOnly="True" HorizontalAlignment="Left" CanUserReorderColumns="False" Width="367" VerticalAlignment="Top" AutoGenerateColumns="False"  ItemsSource="{Binding Path=ActivityGridRows}" Grid.ColumnSpan="2" Margin="7,77,381,0">
            <DataGrid.Columns>
                <!-- There are also ways to define row labels and have them bind to a property (such
as the time of day)
This would be neater visually, but is not shown here. -->
                <DataGridTextColumn Header="Consultation HM" Binding="{Binding TimeSlotString}" />
                <DataGridTextColumn Header="Mon" Width="45" Binding="{Binding Values[0]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[0]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Tue" Width="45" Binding="{Binding Values[1]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[1]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Wed" Width="45" Binding="{Binding Values[2]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[2]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Thu" Width="45" Binding="{Binding Values[3]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[3]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Fri" Width="45" Binding="{Binding Values[4]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[4]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        
        <TextBlock Name="tbHMCampus" HorizontalAlignment="Left" Grid.Column="1" Margin="196,40,0,0" TextWrapping="Wrap" Text="Campus :" VerticalAlignment="Top"/>
        <ComboBox Name="cbHMCampus" Cursor="Hand" HorizontalAlignment="Left" Grid.Column="1" Margin="266,37,0,0" VerticalAlignment="Top" Width="110" ItemsSource="{Binding Source={hris:EnumBindingSource {x:Type model:Campus}}}" SelectionChanged="HMComboBox_CampusChanged"/>
        <Button Content="Launch Class HeatMap" Cursor="Hand" Grid.Column="1" HorizontalAlignment="Left" Margin="20,37,0,0" VerticalAlignment="Top" Width="Auto" Padding="5" Background="#FF4C9E34" Foreground="#FFF7F7F7" Click="Button_Click_Class_HeatMap"/>
        <!-- CLASS HEATMAP STARTS FROM HERE -->
        <DataGrid x:Name="tblMapClassHeat" IsReadOnly="True" CanUserSortColumns="False" Grid.Column="1" CanUserReorderColumns="False" Width="350" HorizontalAlignment="Left" VerticalAlignment="Top" AutoGenerateColumns="False" Margin="20,77,0,0" ItemsSource="{Binding Path=ActivityGridRows}">
            <DataGrid.Columns>
                <!-- There are also ways to define row labels and have them bind to a property (such
as the time of day)
This would be neater visually, but is not shown here. -->
                <DataGridTextColumn Header="Class HM" Binding="{Binding TimeSlotString}" />
                <DataGridTextColumn Header="Mon" Width="45" Binding="{Binding Values[0]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[0]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Tue" Width="45" Binding="{Binding Values[1]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[1]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Wed" Width="45" Binding="{Binding Values[2]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[2]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Thu" Width="45" Binding="{Binding Values[3]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[3]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Fri" Width="45" Binding="{Binding Values[4]}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Colours[4]}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
